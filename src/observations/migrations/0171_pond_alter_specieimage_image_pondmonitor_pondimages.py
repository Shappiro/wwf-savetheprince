# Generated by Django 4.1 on 2025-03-23 14:05

import admin_log.fields
import admin_log.middleware
from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import observations.models
import sorl.thumbnail.fields
import tinymce.models
import utils.models
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('profiles', '0058_alter_profile_liberatoria'),
        ('observations', '0170_alter_observationdetail_session_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pond',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, help_text='Nome identificativo del punto di possibile tutela.', max_length=300, null=True, verbose_name='Nome')),
                ('regione', models.CharField(blank=True, choices=[('Abruzzo', 'Abruzzo'), ('Basilicata', 'Basilicata'), ('Calabria', 'Calabria'), ('Campania', 'Campania'), ('Emilia - Romagna', 'Emilia - Romagna'), ('Friuli - Venezia Giulia', 'Friuli - Venezia Giulia'), ('Lazio', 'Lazio'), ('Liguria', 'Liguria'), ('Lombardia', 'Lombardia'), ('Marche', 'Marche'), ('Molise', 'Molise'), ('Piemonte', 'Piemonte'), ('Puglia', 'Puglia'), ('Sardegna', 'Sardegna'), ('Sicilia', 'Sicilia'), ('Toscana', 'Toscana'), ('Trentino - Alto Adige', 'Trentino - Alto Adige'), ('Umbria', 'Umbria'), ('Valle dAosta', 'Valle dAosta'), ('Veneto', 'Veneto')], max_length=64, null=True, verbose_name='Regione')),
                ('provincia', models.CharField(blank=True, choices=[('Agrigento', 'Agrigento'), ('Alessandria', 'Alessandria'), ('Ancona', 'Ancona'), ('Aosta', 'Aosta'), ('Arezzo', 'Arezzo'), ('Ascoli Piceno', 'Ascoli Piceno'), ('Asti', 'Asti'), ('Avellino', 'Avellino'), ('Città Metropolitana di Bari', 'Città Metropolitana di Bari'), ('Barletta - Andria - Trani', 'Barletta - Andria - Trani'), ('Belluno', 'Belluno'), ('Benevento', 'Benevento'), ('Bergamo', 'Bergamo'), ('Città Metropolitana di Bologna', 'Città Metropolitana di Bologna'), ('Biella', 'Biella'), ('Bolzano', 'Bolzano'), ('Brescia', 'Brescia'), ('Brindisi', 'Brindisi'), ('Caltanissetta', 'Caltanissetta'), ('Città Metropolitana di Cagliari', 'Città Metropolitana di Cagliari'), ('Campobasso', 'Campobasso'), ('Caserta', 'Caserta'), ('Città Metropolitana di Catania', 'Città Metropolitana di Catania'), ('Catanzaro', 'Catanzaro'), ('Chieti', 'Chieti'), ('Como', 'Como'), ('Cosenza', 'Cosenza'), ('Cremona', 'Cremona'), ('Crotone', 'Crotone'), ('Cuneo', 'Cuneo'), ('Enna', 'Enna'), ('Fermo', 'Fermo'), ('Ferrara', 'Ferrara'), ('Città Metropolitana di Firenze', 'Città Metropolitana di Firenze'), ('Foggia', 'Foggia'), ('Forlì - Cesena', 'Forlì - Cesena'), ('Frosinone', 'Frosinone'), ('Città Metropolitana di Genova', 'Città Metropolitana di Genova'), ('Grosseto', 'Grosseto'), ('Imperia', 'Imperia'), ('Isernia', 'Isernia'), ('La Spezia', 'La Spezia'), ('LAquila', 'LAquila'), ('Latina', 'Latina'), ('Lecce', 'Lecce'), ('Lecco', 'Lecco'), ('Livorno', 'Livorno'), ('Lodi', 'Lodi'), ('Lucca', 'Lucca'), ('Macerata', 'Macerata'), ('Mantova', 'Mantova'), ('Massa - Carrara', 'Massa - Carrara'), ('Matera', 'Matera'), ('Città Metropolitana di Messina', 'Città Metropolitana di Messina'), ('Città Metropolitana di Milano', 'Città Metropolitana di Milano'), ('Modena', 'Modena'), ('Monza e Brianza', 'Monza e Brianza'), ('Novara', 'Novara'), ('Città Metropolitana di Napoli', 'Città Metropolitana di Napoli'), ('Nuoro', 'Nuoro'), ('Oristano', 'Oristano'), ('Padova', 'Padova'), ('Città Metropolitana di Palermo', 'Città Metropolitana di Palermo'), ('Parma', 'Parma'), ('Pavia', 'Pavia'), ('Perugia', 'Perugia'), ('Pesaro e Urbino', 'Pesaro e Urbino'), ('Pescara', 'Pescara'), ('Piacenza', 'Piacenza'), ('Pisa', 'Pisa'), ('Pistoia', 'Pistoia'), ('Potenza', 'Potenza'), ('Prato', 'Prato'), ('Ragusa', 'Ragusa'), ('Ravenna', 'Ravenna'), ('Città Metropolitana di Reggio Calabria', 'Città Metropolitana di Reggio Calabria'), ('Reggio Emilia', 'Reggio Emilia'), ('Rieti', 'Rieti'), ('Rimini', 'Rimini'), ('Città Metropolitana di Roma Capitale', 'Città Metropolitana di Roma Capitale'), ('Rovigo', 'Rovigo'), ('Salerno', 'Salerno'), ('Sassari', 'Sassari'), ('Savona', 'Savona'), ('Siena', 'Siena'), ('Siracusa', 'Siracusa'), ('Sondrio', 'Sondrio'), ('Sud Sardegna', 'Sud Sardegna'), ('Taranto', 'Taranto'), ('Teramo', 'Teramo'), ('Terni', 'Terni'), ('Città Metropolitana di Torino', 'Città Metropolitana di Torino'), ('Trapani', 'Trapani'), ('Trento', 'Trento'), ('Treviso', 'Treviso'), ('Varese', 'Varese'), ('Città Metropolitana di Venezia', 'Città Metropolitana di Venezia'), ('Verbano - Cusio - Ossola', 'Verbano - Cusio - Ossola'), ('Vercelli', 'Vercelli'), ('Verona', 'Verona'), ('Vibo Valentia', 'Vibo Valentia'), ('Vicenza', 'Vicenza'), ('Viterbo', 'Viterbo')], max_length=64, null=True, verbose_name='Provincia')),
                ('comune', models.CharField(blank=True, max_length=100, null=True, verbose_name='Comune')),
                ('descrizione', tinymce.models.HTMLField(blank=True, help_text='Descrizione', null=True, verbose_name='Descrizione')),
                ('attivo', models.BooleanField(default=True, verbose_name='Attivo?')),
                ('geom', django.contrib.gis.db.models.fields.PolygonField(blank=True, null=True, srid=4326, verbose_name='Area')),
                ('lunghezza', models.IntegerField(blank=True, null=True, verbose_name='Lunghezza, se rilevante')),
                ('data_scoperta', models.DateField(blank=True, null=True, verbose_name='Data del primo rilevamento')),
                ('tutelato', models.BooleanField(default=False, verbose_name='Tutelato?')),
                ('proprietario', models.CharField(blank=True, max_length=300, null=True, verbose_name='Proprietario')),
                ('contatto_proprietario', models.CharField(blank=True, max_length=300, null=True, verbose_name='Contatto proprietario')),
                ('created_by', admin_log.fields.AutoCreatedByField(blank=True, default=admin_log.middleware.AdminLogMiddleware.get_user_id, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modified_by', admin_log.fields.AutoModifiedByField(blank=True, default=admin_log.middleware.AdminLogMiddleware.get_user_id, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('species', models.ManyToManyField(blank=True, null=True, related_name='ponds', to='observations.specie', verbose_name='Specie osservate')),
            ],
            options={
                'verbose_name': 'Punto di possibile tutela',
                'verbose_name_plural': 'Punti di possibile tutela',
                'ordering': ['name'],
            },
        ),
        migrations.AlterField(
            model_name='specieimage',
            name='image',
            field=sorl.thumbnail.fields.ImageField(blank=True, help_text='Immagini rappresentative della specie', null=True, upload_to=observations.models.specieimage_upload_function, verbose_name='Immagine'),
        ),
        migrations.CreateModel(
            name='PondMonitor',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Data')),
                ('time', models.TimeField(verbose_name="Ora d'inizio")),
                ('end', models.TimeField(verbose_name='Ora di fine')),
                ('meteo', models.CharField(blank=True, choices=[('M-NUV', 'Nuvoloso'), ('M-PIO', 'Pioggia'), ('M-VAR', 'Variabile'), ('M-SER', 'Sereno'), ('M-NEBPIO', 'Pioggerella/Nebbia'), ('M-NEV', 'Neve')], max_length=15, null=True, verbose_name='Meteo')),
                ('vento', models.CharField(blank=True, choices=[('V-NO', 'Assente'), ('V-LOW', 'Scarso'), ('V-MED', 'Medio'), ('V-HIG', 'Intenso')], max_length=15, null=True, verbose_name='Vento')),
                ('temperature', models.FloatField(blank=True, help_text='La temperatura media in gradi centigradi registrata durante il monitoraggio, direttamente sul sito', null=True, verbose_name='Temperatura (locale)')),
                ('volontari_unregistered', models.CharField(blank=True, help_text="Iniziali maiuscole, separare con virgola un volontario dall'altro", max_length=2046, null=True, verbose_name='Volontari non registrati (SENZA PROFILO SU SAVE THE PRINCE)')),
                ('note', models.TextField(blank=True, null=True, verbose_name='Note')),
                ('created_by', admin_log.fields.AutoCreatedByField(blank=True, default=admin_log.middleware.AdminLogMiddleware.get_user_id, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('modified_by', admin_log.fields.AutoModifiedByField(blank=True, default=admin_log.middleware.AdminLogMiddleware.get_user_id, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Modified by')),
                ('pond', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pondmonitors', to='observations.pond', verbose_name='Punto di possibile tutela')),
                ('species', models.ManyToManyField(blank=True, null=True, related_name='pondmonitors', to='observations.specie', verbose_name='Specie osservate')),
                ('volontari', models.ManyToManyField(blank=True, help_text='Iniziare a digitare un nome, quindi ->>>CLICCARE<<<- sul nome che si desidera aggiungere', null=True, to='profiles.profile', verbose_name='Volontari registrati (CON PROFILO SU SAVE THE PRINCE)')),
            ],
            options={
                'verbose_name': 'Monitoraggio del punto di possibile tutela',
                'verbose_name_plural': 'Monitoraggi dei punti di possibile tutela',
                'ordering': ('-date', '-time', 'pond'),
            },
        ),
        migrations.CreateModel(
            name='PondImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', sorl.thumbnail.fields.ImageField(blank=True, help_text='Immagine rappresentativa del punto di possibile tutela', null=True, upload_to='ponds/%Y-%m-%d/', verbose_name='Immagine')),
                ('descr', utils.models.ShortTextField(blank=True, null=True, verbose_name='Descrizione eventuale')),
                ('author', models.CharField(blank=True, max_length=300, null=True, verbose_name='Autore')),
                ('pond', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pondimages', to='observations.pond', verbose_name='Punto di possibile tutela')),
            ],
            options={
                'verbose_name': 'Immagine del punto di possibile tutela',
                'verbose_name_plural': 'Immagini dei punti di possibile tutela',
            },
        ),
    ]
